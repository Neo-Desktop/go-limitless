From 02c20802746170d218a7c9a7d3343004a5f9df77 Mon Sep 17 00:00:00 2001
From: Nesurion <maik.schwan@gmail.com>
Date: Mon, 12 Oct 2015 15:08:09 +0200
Subject: [PATCH 01/16] adds Night command - refactor examples to forked
 version

---
 examples/night/main.go    |  16 ++++
 examples/setcolor/main.go |  20 ++---
 limitless.go              | 195 ++++++++++++++++++++++++----------------------
 3 files changed, 129 insertions(+), 102 deletions(-)
 create mode 100644 examples/night/main.go

diff --git a/examples/night/main.go b/examples/night/main.go
new file mode 100644
index 0000000..e67c80f
--- /dev/null
+++ b/examples/night/main.go
@@ -0,0 +1,16 @@
+package main
+
+import (
+	"github.com/nesurion/go-limitless"
+)
+
+func main() {
+	c := limitless.LimitlessController{}
+	c.Host = "192.168.2.141"
+	group := limitless.LimitlessGroup{}
+	group.Id = 1
+	group.Controller = &c
+	c.Groups = []limitless.LimitlessGroup{group}
+
+	group.Night()
+}
diff --git a/examples/setcolor/main.go b/examples/setcolor/main.go
index e3b2d34..4e3cc1a 100644
--- a/examples/setcolor/main.go
+++ b/examples/setcolor/main.go
@@ -1,18 +1,18 @@
 package main
 
 import (
-  "github.com/lucasb-eyer/go-colorful"
-  "github.com/evq/go-limitless"
+	"github.com/lucasb-eyer/go-colorful"
+	"github.com/nesurion/go-limitless"
 )
 
 func main() {
-  c := limitless.LimitlessController{}
-  c.Host = "192.168.1.138"
-  group := limitless.LimitlessGroup{}
-  group.Id = 1
-  group.Controller = &c
-  c.Groups = []limitless.LimitlessGroup{group}
+	c := limitless.LimitlessController{}
+	c.Host = "192.168.1.138"
+	group := limitless.LimitlessGroup{}
+	group.Id = 1
+	group.Controller = &c
+	c.Groups = []limitless.LimitlessGroup{group}
 
-  color := colorful.Hsv(320.0, 1.0, 1.0)
-  group.SendColor(color)
+	color := colorful.Hsv(320.0, 1.0, 1.0)
+	group.SendColor(color)
 }
diff --git a/limitless.go b/limitless.go
index 00c9067..e32fd06 100644
--- a/limitless.go
+++ b/limitless.go
@@ -1,130 +1,141 @@
 package limitless
 
 import (
-  "encoding/binary"
-  "net"
-  "bytes"
-  "github.com/lucasb-eyer/go-colorful"
-  "time"
+	"bytes"
+	"encoding/binary"
+	"github.com/lucasb-eyer/go-colorful"
+	"net"
+	"time"
 )
 
 type LimitlessController struct {
-  Host string `json:"host"`
-  Name string `json:"name"`
-  Groups []LimitlessGroup `json:"groups"`
+	Host   string           `json:"host"`
+	Name   string           `json:"name"`
+	Groups []LimitlessGroup `json:"groups"`
 }
 
 type LimitlessGroup struct {
-  Id int `json:"id"`
-  Type string `json:"type"`
-  Name string `json:"name"`
-  Controller *LimitlessController `json:"-"`
+	Id         int                  `json:"id"`
+	Type       string               `json:"type"`
+	Name       string               `json:"name"`
+	Controller *LimitlessController `json:"-"`
 }
 
 type LimitlessMessage struct {
-  Key uint8
-  Value uint8
-  Suffix uint8
+	Key    uint8
+	Value  uint8
+	Suffix uint8
 }
 
 const (
-  LIMITLESS_ADMIN_PORT = "48899"
-  LIMITLESS_PORT = "8899"
+	LIMITLESS_ADMIN_PORT = "48899"
+	LIMITLESS_PORT       = "8899"
 )
 
 const MAX_BRIGHTNESS = 0x1b
 
 func NewLimitlessMessage() *LimitlessMessage {
-  msg := LimitlessMessage{}
-  msg.Suffix = 0x55
-  return &msg
+	msg := LimitlessMessage{}
+	msg.Suffix = 0x55
+	return &msg
 }
 
-func (g *LimitlessGroup) SendColor(c colorful.Color) (error) {
-  h, s, v := c.Hsv()
-  h = 240.0 - h
-  if h < 0 {
-    h = 360.0 + h
-  }
-  scaled_h := uint8(h * 255.0 / 360.0)
-  scaled_v := uint8(v * MAX_BRIGHTNESS)
-
-  var err error
-
-  if scaled_v < 0x02 {
-    return g.Off()
-  // If closer to white then a saturated color :D
-  } else if s < 0.5 {
-    err = g.White()
-    if err != nil {
-      return err
-    }
-  } else {
-    err = g.Activate()
-    if err != nil {
-      return err
-    }
-    time.Sleep(100 * time.Millisecond)
-    err = g.SetHue(scaled_h)
-    if err != nil {
-      return err
-    }
-
-  }
-  err = g.Activate()
-  if err != nil {
-    return err
-  }
-  time.Sleep(100 * time.Millisecond)
-  err = g.SetBri(scaled_v)
-  return err
+func (g *LimitlessGroup) SendColor(c colorful.Color) error {
+	h, s, v := c.Hsv()
+	h = 240.0 - h
+	if h < 0 {
+		h = 360.0 + h
+	}
+	scaled_h := uint8(h * 255.0 / 360.0)
+	scaled_v := uint8(v * MAX_BRIGHTNESS)
+
+	var err error
+
+	if scaled_v < 0x02 {
+		return g.Off()
+		// If closer to white then a saturated color :D
+	} else if s < 0.5 {
+		err = g.White()
+		if err != nil {
+			return err
+		}
+	} else {
+		err = g.Activate()
+		if err != nil {
+			return err
+		}
+		time.Sleep(100 * time.Millisecond)
+		err = g.SetHue(scaled_h)
+		if err != nil {
+			return err
+		}
+
+	}
+	err = g.Activate()
+	if err != nil {
+		return err
+	}
+	time.Sleep(100 * time.Millisecond)
+	err = g.SetBri(scaled_v)
+	return err
 }
 
-func (g *LimitlessGroup) SetHue(h uint8) (error) {
-  msg := NewLimitlessMessage()
-  msg.Key = 0x40
-  msg.Value = h
-  return g.Controller.sendMsg(msg)
+func (g *LimitlessGroup) SetHue(h uint8) error {
+	msg := NewLimitlessMessage()
+	msg.Key = 0x40
+	msg.Value = h
+	return g.Controller.sendMsg(msg)
 }
 
-func (g *LimitlessGroup) SetBri(b uint8) (error) {
-  //if b > MAX_BRIGHTNESS {
-    //return err
-  //}
-  msg := NewLimitlessMessage()
-  msg.Key = 0x4e
-  msg.Value = b
-  return g.Controller.sendMsg(msg)
+func (g *LimitlessGroup) SetBri(b uint8) error {
+	//if b > MAX_BRIGHTNESS {
+	//return err
+	//}
+	msg := NewLimitlessMessage()
+	msg.Key = 0x4e
+	msg.Value = b
+	return g.Controller.sendMsg(msg)
 }
-func (g *LimitlessGroup) White() (error) {
-  msg := NewLimitlessMessage()
-  msg.Key = uint8(0xC5 + ((g.Id - 1) * 2))
-  return g.Controller.sendMsg(msg)
+func (g *LimitlessGroup) White() error {
+	msg := NewLimitlessMessage()
+	msg.Key = uint8(0xC5 + ((g.Id - 1) * 2))
+	return g.Controller.sendMsg(msg)
 }
 
-func (g *LimitlessGroup) On() (error) {
-  msg := NewLimitlessMessage()
-  msg.Key = uint8(0x45 + ((g.Id - 1) * 2))
-  return g.Controller.sendMsg(msg)
+func (g *LimitlessGroup) On() error {
+	msg := NewLimitlessMessage()
+	msg.Key = uint8(0x45 + ((g.Id - 1) * 2))
+	return g.Controller.sendMsg(msg)
 }
 
-func (g *LimitlessGroup) Off() (error) {
-  msg := NewLimitlessMessage()
-  msg.Key = uint8(0x46 + ((g.Id - 1) * 2))
-  return g.Controller.sendMsg(msg)
+func (g *LimitlessGroup) Off() error {
+	msg := NewLimitlessMessage()
+	msg.Key = uint8(0x46 + ((g.Id - 1) * 2))
+	return g.Controller.sendMsg(msg)
 }
 
-func (g *LimitlessGroup) Activate() (error) {
-  return g.On()
+func (g *LimitlessGroup) Night() error {
+	msg := NewLimitlessMessage()
+	msg.Key = 0xC6
+	err := g.Off()
+	if err != nil {
+		return err
+	}
+	time.Sleep(100 * time.Millisecond)
+	return g.Controller.sendMsg(msg)
 }
 
-func (c *LimitlessController) sendMsg(msg *LimitlessMessage) (error) {
-	conn, err := net.Dial("udp", c.Host + ":" + LIMITLESS_PORT)
-  if err != nil {
-    return err
-  }
+func (g *LimitlessGroup) Activate() error {
+	return g.On()
+}
+
+func (c *LimitlessController) sendMsg(msg *LimitlessMessage) error {
+	conn, err := net.Dial("udp", c.Host+":"+LIMITLESS_PORT)
+	if err != nil {
+		return err
+	}
 	buf := new(bytes.Buffer)
 	binary.Write(buf, binary.LittleEndian, msg)
-  _, err = conn.Write(buf.Bytes())
-  return err
+	_, err = conn.Write(buf.Bytes())
+	return err
 }

From cfd3f62b5c38c9df5d838be005af5f1ae59cd450 Mon Sep 17 00:00:00 2001
From: Nesurion <maik.schwan@gmail.com>
Date: Mon, 12 Oct 2015 15:22:54 +0200
Subject: [PATCH 02/16] send Night command based on group id

---
 limitless.go | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/limitless.go b/limitless.go
index e32fd06..c83e8ab 100644
--- a/limitless.go
+++ b/limitless.go
@@ -116,7 +116,7 @@ func (g *LimitlessGroup) Off() error {
 
 func (g *LimitlessGroup) Night() error {
 	msg := NewLimitlessMessage()
-	msg.Key = 0xC6
+	msg.Key = uint8(0xC6 + ((g.Id - 1) * 2))
 	err := g.Off()
 	if err != nil {
 		return err

From d50946a0a9e595f3a2a60295839e218152ca8d0b Mon Sep 17 00:00:00 2001
From: Nesurion <maik.schwan@gmail.com>
Date: Mon, 12 Oct 2015 15:29:56 +0200
Subject: [PATCH 03/16] adds disco functions

---
 limitless.go | 18 ++++++++++++++++++
 1 file changed, 18 insertions(+)

diff --git a/limitless.go b/limitless.go
index c83e8ab..8e4f23f 100644
--- a/limitless.go
+++ b/limitless.go
@@ -125,6 +125,24 @@ func (g *LimitlessGroup) Night() error {
 	return g.Controller.sendMsg(msg)
 }
 
+func (g *LimitlessGroup) Disco() error {
+	msg := NewLimitlessMessage()
+	msg.Key = uint8(0x4D + ((g.Id - 1) * 2))
+	return g.Controller.sendMsg(msg)
+}
+
+func (g *LimitlessGroup) DiscoFaster() error {
+	msg := NewLimitlessMessage()
+	msg.Key = uint8(0x44 + ((g.Id - 1) * 2))
+	return g.Controller.sendMsg(msg)
+}
+
+func (g *LimitlessGroup) DiscoSlower() error {
+	msg := NewLimitlessMessage()
+	msg.Key = uint8(0x43 + ((g.Id - 1) * 2))
+	return g.Controller.sendMsg(msg)
+}
+
 func (g *LimitlessGroup) Activate() error {
 	return g.On()
 }

From a0c3c4dcae98bcad472b6768a59243be987a19e5 Mon Sep 17 00:00:00 2001
From: Nesurion <maik.schwan@gmail.com>
Date: Mon, 12 Oct 2015 15:32:11 +0200
Subject: [PATCH 04/16] adds disco example

---
 examples/disco/main.go | 20 ++++++++++++++++++++
 1 file changed, 20 insertions(+)
 create mode 100644 examples/disco/main.go

diff --git a/examples/disco/main.go b/examples/disco/main.go
new file mode 100644
index 0000000..22db4a7
--- /dev/null
+++ b/examples/disco/main.go
@@ -0,0 +1,20 @@
+package main
+
+import (
+	"github.com/nesurion/go-limitless"
+)
+
+func main() {
+	c := limitless.LimitlessController{}
+	c.Host = "192.168.2.141"
+	group := limitless.LimitlessGroup{}
+	group.Id = 1
+	group.Controller = &c
+	c.Groups = []limitless.LimitlessGroup{group}
+
+	group.Disco()
+	time.Sleep(1000 * time.Millisecond)
+	group.DiscoSlower()
+	time.Sleep(1000 * time.Millisecond)
+	group.DiscoFaster()
+}

From 3290810d8ce43ebb38554c0e39d0e94a8bba729a Mon Sep 17 00:00:00 2001
From: Nesurion <maik.schwan@gmail.com>
Date: Mon, 12 Oct 2015 15:35:24 +0200
Subject: [PATCH 05/16] adds missing time import

---
 examples/disco/main.go | 1 +
 1 file changed, 1 insertion(+)

diff --git a/examples/disco/main.go b/examples/disco/main.go
index 22db4a7..c6ec5cd 100644
--- a/examples/disco/main.go
+++ b/examples/disco/main.go
@@ -2,6 +2,7 @@ package main
 
 import (
 	"github.com/nesurion/go-limitless"
+	"time"
 )
 
 func main() {

From 488f6e6bdcd4efeaf7a50d0c36c264b7eef4b9dd Mon Sep 17 00:00:00 2001
From: Nesurion <maik.schwan@gmail.com>
Date: Mon, 12 Oct 2015 15:54:33 +0200
Subject: [PATCH 06/16] move groupId based key to function

---
 limitless.go | 19 ++++++++++++-------
 1 file changed, 12 insertions(+), 7 deletions(-)

diff --git a/limitless.go b/limitless.go
index 8e4f23f..fd6f8db 100644
--- a/limitless.go
+++ b/limitless.go
@@ -40,6 +40,11 @@ func NewLimitlessMessage() *LimitlessMessage {
 	return &msg
 }
 
+func (m *LimitlessMessage) generateKey(hex int, g *LimitlessGroup) {
+	m.Key = uint8(hex + ((g.Id - 1) * 2))
+	return
+}
+
 func (g *LimitlessGroup) SendColor(c colorful.Color) error {
 	h, s, v := c.Hsv()
 	h = 240.0 - h
@@ -98,25 +103,25 @@ func (g *LimitlessGroup) SetBri(b uint8) error {
 }
 func (g *LimitlessGroup) White() error {
 	msg := NewLimitlessMessage()
-	msg.Key = uint8(0xC5 + ((g.Id - 1) * 2))
+	msg.generateKey(0xC5, g)
 	return g.Controller.sendMsg(msg)
 }
 
 func (g *LimitlessGroup) On() error {
 	msg := NewLimitlessMessage()
-	msg.Key = uint8(0x45 + ((g.Id - 1) * 2))
+	msg.generateKey(0x45, g)
 	return g.Controller.sendMsg(msg)
 }
 
 func (g *LimitlessGroup) Off() error {
 	msg := NewLimitlessMessage()
-	msg.Key = uint8(0x46 + ((g.Id - 1) * 2))
+	msg.generateKey(0x46, g)
 	return g.Controller.sendMsg(msg)
 }
 
 func (g *LimitlessGroup) Night() error {
 	msg := NewLimitlessMessage()
-	msg.Key = uint8(0xC6 + ((g.Id - 1) * 2))
+	msg.generateKey(0xC6, g)
 	err := g.Off()
 	if err != nil {
 		return err
@@ -127,19 +132,19 @@ func (g *LimitlessGroup) Night() error {
 
 func (g *LimitlessGroup) Disco() error {
 	msg := NewLimitlessMessage()
-	msg.Key = uint8(0x4D + ((g.Id - 1) * 2))
+	msg.generateKey(0x4D, g)
 	return g.Controller.sendMsg(msg)
 }
 
 func (g *LimitlessGroup) DiscoFaster() error {
 	msg := NewLimitlessMessage()
-	msg.Key = uint8(0x44 + ((g.Id - 1) * 2))
+	msg.generateKey(0x44, g)
 	return g.Controller.sendMsg(msg)
 }
 
 func (g *LimitlessGroup) DiscoSlower() error {
 	msg := NewLimitlessMessage()
-	msg.Key = uint8(0x43 + ((g.Id - 1) * 2))
+	msg.generateKey(0x43, g)
 	return g.Controller.sendMsg(msg)
 }
 

From bdbc608ff298477055be99a77039b2d3699e6367 Mon Sep 17 00:00:00 2001
From: Nesurion <maik.schwan@gmail.com>
Date: Sun, 8 Nov 2015 00:01:41 +0100
Subject: [PATCH 07/16] generate key for brightness and hue

---
 limitless.go | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

diff --git a/limitless.go b/limitless.go
index fd6f8db..bd7a846 100644
--- a/limitless.go
+++ b/limitless.go
@@ -87,17 +87,17 @@ func (g *LimitlessGroup) SendColor(c colorful.Color) error {
 
 func (g *LimitlessGroup) SetHue(h uint8) error {
 	msg := NewLimitlessMessage()
-	msg.Key = 0x40
+	msg.generateKey(0x40, g)
 	msg.Value = h
 	return g.Controller.sendMsg(msg)
 }
 
 func (g *LimitlessGroup) SetBri(b uint8) error {
-	//if b > MAX_BRIGHTNESS {
-	//return err
-	//}
+	if b > MAX_BRIGHTNESS {
+		return err
+	}
 	msg := NewLimitlessMessage()
-	msg.Key = 0x4e
+	msg.generateKey(0x4e, g)
 	msg.Value = b
 	return g.Controller.sendMsg(msg)
 }

From 45dfb9a9219b1500f7f7feb7a4b23de1176d9ae7 Mon Sep 17 00:00:00 2001
From: Nesurion <maik.schwan@gmail.com>
Date: Sun, 8 Nov 2015 00:02:59 +0100
Subject: [PATCH 08/16] remove err return on wrong brightness level

---
 limitless.go | 3 ---
 1 file changed, 3 deletions(-)

diff --git a/limitless.go b/limitless.go
index bd7a846..f95914f 100644
--- a/limitless.go
+++ b/limitless.go
@@ -93,9 +93,6 @@ func (g *LimitlessGroup) SetHue(h uint8) error {
 }
 
 func (g *LimitlessGroup) SetBri(b uint8) error {
-	if b > MAX_BRIGHTNESS {
-		return err
-	}
 	msg := NewLimitlessMessage()
 	msg.generateKey(0x4e, g)
 	msg.Value = b

From abe176ba9e3c120e086b6793f94692988be2ccbe Mon Sep 17 00:00:00 2001
From: Nesurion <maik.schwan@gmail.com>
Date: Sun, 8 Nov 2015 00:15:20 +0100
Subject: [PATCH 09/16] send correct hue and color commands based on group

---
 limitless.go | 13 +++++++++++--
 1 file changed, 11 insertions(+), 2 deletions(-)

diff --git a/limitless.go b/limitless.go
index f95914f..cea3f4d 100644
--- a/limitless.go
+++ b/limitless.go
@@ -88,16 +88,25 @@ func (g *LimitlessGroup) SendColor(c colorful.Color) error {
 func (g *LimitlessGroup) SetHue(h uint8) error {
 	msg := NewLimitlessMessage()
 	msg.generateKey(0x40, g)
-	msg.Value = h
+	err := g.On()
+	if err != nil {
+		return err
+	}
+	time.Sleep(100 * time.Millisecond)
 	return g.Controller.sendMsg(msg)
 }
 
 func (g *LimitlessGroup) SetBri(b uint8) error {
 	msg := NewLimitlessMessage()
 	msg.generateKey(0x4e, g)
-	msg.Value = b
+	err := g.On()
+	if err != nil {
+		return err
+	}
+	time.Sleep(100 * time.Millisecond)
 	return g.Controller.sendMsg(msg)
 }
+
 func (g *LimitlessGroup) White() error {
 	msg := NewLimitlessMessage()
 	msg.generateKey(0xC5, g)

From a86152af8d317ad34526c6a72b67e75ad780f66d Mon Sep 17 00:00:00 2001
From: Nesurion <maik.schwan@gmail.com>
Date: Sun, 8 Nov 2015 00:26:00 +0100
Subject: [PATCH 10/16] fix hue and brightness

---
 limitless.go | 10 ++++++++--
 1 file changed, 8 insertions(+), 2 deletions(-)

diff --git a/limitless.go b/limitless.go
index cea3f4d..e1310a5 100644
--- a/limitless.go
+++ b/limitless.go
@@ -3,6 +3,7 @@ package limitless
 import (
 	"bytes"
 	"encoding/binary"
+	"errors"
 	"github.com/lucasb-eyer/go-colorful"
 	"net"
 	"time"
@@ -87,7 +88,8 @@ func (g *LimitlessGroup) SendColor(c colorful.Color) error {
 
 func (g *LimitlessGroup) SetHue(h uint8) error {
 	msg := NewLimitlessMessage()
-	msg.generateKey(0x40, g)
+	msg.Key = 0x40
+	msg.Value = h
 	err := g.On()
 	if err != nil {
 		return err
@@ -97,8 +99,12 @@ func (g *LimitlessGroup) SetHue(h uint8) error {
 }
 
 func (g *LimitlessGroup) SetBri(b uint8) error {
+	if b > MAX_BRIGHTNESS {
+		return errors.New("brightness too high. (max 0x1B)")
+	}
 	msg := NewLimitlessMessage()
-	msg.generateKey(0x4e, g)
+	msg.Key = 0x4E
+	msg.Value = b
 	err := g.On()
 	if err != nil {
 		return err

From 2f1d31e2f8854fa45b2a2ab362915eff1291d7a3 Mon Sep 17 00:00:00 2001
From: Nesurion <maik.schwan@gmail.com>
Date: Mon, 9 Nov 2015 17:36:17 +0100
Subject: [PATCH 11/16] close connection after sending a command

---
 limitless.go | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

diff --git a/limitless.go b/limitless.go
index e1310a5..541d9bf 100644
--- a/limitless.go
+++ b/limitless.go
@@ -90,7 +90,7 @@ func (g *LimitlessGroup) SetHue(h uint8) error {
 	msg := NewLimitlessMessage()
 	msg.Key = 0x40
 	msg.Value = h
-	err := g.On()
+	err := g.Activate()
 	if err != nil {
 		return err
 	}
@@ -105,7 +105,7 @@ func (g *LimitlessGroup) SetBri(b uint8) error {
 	msg := NewLimitlessMessage()
 	msg.Key = 0x4E
 	msg.Value = b
-	err := g.On()
+	err := g.Activate()
 	if err != nil {
 		return err
 	}
@@ -166,6 +166,7 @@ func (g *LimitlessGroup) Activate() error {
 
 func (c *LimitlessController) sendMsg(msg *LimitlessMessage) error {
 	conn, err := net.Dial("udp", c.Host+":"+LIMITLESS_PORT)
+	defer conn.Close()
 	if err != nil {
 		return err
 	}

From 5b499d1542738f7e57368ae6aa308d97af219b7a Mon Sep 17 00:00:00 2001
From: Nesurion <maik.schwan@gmail.com>
Date: Sat, 14 Nov 2015 11:31:23 +0100
Subject: [PATCH 12/16] create connection when creating to controller

---
 limitless.go | 26 +++++++++++++++++---------
 1 file changed, 17 insertions(+), 9 deletions(-)

diff --git a/limitless.go b/limitless.go
index 541d9bf..2406cc3 100644
--- a/limitless.go
+++ b/limitless.go
@@ -10,9 +10,10 @@ import (
 )
 
 type LimitlessController struct {
-	Host   string           `json:"host"`
-	Name   string           `json:"name"`
-	Groups []LimitlessGroup `json:"groups"`
+	Host       string           `json:"host"`
+	Name       string           `json:"name"`
+	Connection net.Conn         `json:"-"`
+	Groups     []LimitlessGroup `json:"groups"`
 }
 
 type LimitlessGroup struct {
@@ -35,6 +36,18 @@ const (
 
 const MAX_BRIGHTNESS = 0x1b
 
+func NewLimitlessController(host string) (*LimitlessController, error) {
+	conn, err := net.Dial("udp", host+":"+LIMITLESS_PORT)
+	if err != nil {
+		return nil, err
+	}
+	c := LimitlessController{
+		Host:       host,
+		Connection: conn,
+	}
+	return &c, nil
+}
+
 func NewLimitlessMessage() *LimitlessMessage {
 	msg := LimitlessMessage{}
 	msg.Suffix = 0x55
@@ -165,13 +178,8 @@ func (g *LimitlessGroup) Activate() error {
 }
 
 func (c *LimitlessController) sendMsg(msg *LimitlessMessage) error {
-	conn, err := net.Dial("udp", c.Host+":"+LIMITLESS_PORT)
-	defer conn.Close()
-	if err != nil {
-		return err
-	}
 	buf := new(bytes.Buffer)
 	binary.Write(buf, binary.LittleEndian, msg)
-	_, err = conn.Write(buf.Bytes())
+	_, err := c.Connection.Write(buf.Bytes())
 	return err
 }

From a943af8c07b38b0be6f8309de795f5d1603c4928 Mon Sep 17 00:00:00 2001
From: Nesurion <maik.schwan@gmail.com>
Date: Mon, 16 Nov 2015 08:57:50 +0100
Subject: [PATCH 13/16] connection open and close functions - AllOn AllOff
 functions

---
 limitless.go | 36 ++++++++++++++++++++++++++++++------
 1 file changed, 30 insertions(+), 6 deletions(-)

diff --git a/limitless.go b/limitless.go
index 2406cc3..0ecbc3a 100644
--- a/limitless.go
+++ b/limitless.go
@@ -37,17 +37,41 @@ const (
 const MAX_BRIGHTNESS = 0x1b
 
 func NewLimitlessController(host string) (*LimitlessController, error) {
-	conn, err := net.Dial("udp", host+":"+LIMITLESS_PORT)
+	c := LimitlessController{
+		Host: host,
+	}
+	err := c.OpenConnection(host)
 	if err != nil {
 		return nil, err
 	}
-	c := LimitlessController{
-		Host:       host,
-		Connection: conn,
-	}
 	return &c, nil
 }
 
+func (c *LimitlessController) CloseConnection() error {
+	err := c.Connection.Close()
+	return err
+}
+
+func (c *LimitlessController) OpenConnection(host string) error {
+	conn, err := net.Dial("udp", host+":"+LIMITLESS_PORT)
+	if err == nil {
+		c.Connection = conn
+	}
+	return err
+}
+
+func (c *LimitlessController) AllOn() error {
+	msg := NewLimitlessMessage()
+	msg.Key = 0x42
+	return c.sendMsg(msg)
+}
+
+func (c *LimitlessController) AllOff() error {
+	msg := NewLimitlessMessage()
+	msg.Key = 0x41
+	return c.sendMsg(msg)
+}
+
 func NewLimitlessMessage() *LimitlessMessage {
 	msg := LimitlessMessage{}
 	msg.Suffix = 0x55
@@ -180,6 +204,6 @@ func (g *LimitlessGroup) Activate() error {
 func (c *LimitlessController) sendMsg(msg *LimitlessMessage) error {
 	buf := new(bytes.Buffer)
 	binary.Write(buf, binary.LittleEndian, msg)
-	_, err := c.Connection.Write(buf.Bytes())
+	transferedByte, err := c.Connection.Write(buf.Bytes())
 	return err
 }

From 378211b43f7192ad39e93959b3acdfe1f959a1aa Mon Sep 17 00:00:00 2001
From: Nesurion <maik.schwan@gmail.com>
Date: Mon, 16 Nov 2015 08:58:34 +0100
Subject: [PATCH 14/16] ignore send bytes

---
 limitless.go | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/limitless.go b/limitless.go
index 0ecbc3a..ae323e9 100644
--- a/limitless.go
+++ b/limitless.go
@@ -204,6 +204,6 @@ func (g *LimitlessGroup) Activate() error {
 func (c *LimitlessController) sendMsg(msg *LimitlessMessage) error {
 	buf := new(bytes.Buffer)
 	binary.Write(buf, binary.LittleEndian, msg)
-	transferedByte, err := c.Connection.Write(buf.Bytes())
+	_, err := c.Connection.Write(buf.Bytes())
 	return err
 }

From b682f4ca10c92c5671169bd8e5750fd1c24b30cf Mon Sep 17 00:00:00 2001
From: Nesurion <maik.schwan@gmail.com>
Date: Mon, 16 Nov 2015 20:33:06 +0100
Subject: [PATCH 15/16] function to send color byte to pre activated group

---
 limitless.go | 7 +++++++
 1 file changed, 7 insertions(+)

diff --git a/limitless.go b/limitless.go
index ae323e9..68bf024 100644
--- a/limitless.go
+++ b/limitless.go
@@ -83,6 +83,13 @@ func (m *LimitlessMessage) generateKey(hex int, g *LimitlessGroup) {
 	return
 }
 
+func (g *LimitlessGroup) SendColorByte(code uint8) {
+	msg := NewLimitlessMessage()
+	msg.Key = 0x40
+	msg.Value = code
+	g.Controller.sendMsg(msg)
+}
+
 func (g *LimitlessGroup) SendColor(c colorful.Color) error {
 	h, s, v := c.Hsv()
 	h = 240.0 - h

From 8933bcd69ae249d363c4c2a4a22250a1f51cb7f3 Mon Sep 17 00:00:00 2001
From: Nesurion <maik.schwan@gmail.com>
Date: Mon, 16 Nov 2015 21:06:51 +0100
Subject: [PATCH 16/16] group 0 to controll all lights with one command

---
 limitless.go | 42 +++++++++++++++++++++++-------------------
 1 file changed, 23 insertions(+), 19 deletions(-)

diff --git a/limitless.go b/limitless.go
index ae323e9..0338663 100644
--- a/limitless.go
+++ b/limitless.go
@@ -60,18 +60,6 @@ func (c *LimitlessController) OpenConnection(host string) error {
 	return err
 }
 
-func (c *LimitlessController) AllOn() error {
-	msg := NewLimitlessMessage()
-	msg.Key = 0x42
-	return c.sendMsg(msg)
-}
-
-func (c *LimitlessController) AllOff() error {
-	msg := NewLimitlessMessage()
-	msg.Key = 0x41
-	return c.sendMsg(msg)
-}
-
 func NewLimitlessMessage() *LimitlessMessage {
 	msg := LimitlessMessage{}
 	msg.Suffix = 0x55
@@ -152,25 +140,41 @@ func (g *LimitlessGroup) SetBri(b uint8) error {
 
 func (g *LimitlessGroup) White() error {
 	msg := NewLimitlessMessage()
-	msg.generateKey(0xC5, g)
+	if g.Id == 0 {
+		msg.Key = 0xC2
+	} else {
+		msg.generateKey(0xC5, g)
+	}
 	return g.Controller.sendMsg(msg)
 }
 
 func (g *LimitlessGroup) On() error {
 	msg := NewLimitlessMessage()
-	msg.generateKey(0x45, g)
+	if g.Id == 0 {
+		msg.Key = 0x42
+	} else {
+		msg.generateKey(0x45, g)
+	}
 	return g.Controller.sendMsg(msg)
 }
 
 func (g *LimitlessGroup) Off() error {
 	msg := NewLimitlessMessage()
-	msg.generateKey(0x46, g)
+	if g.Id == 0 {
+		msg.Key = 0x41
+	} else {
+		msg.generateKey(0x46, g)
+	}
 	return g.Controller.sendMsg(msg)
 }
 
 func (g *LimitlessGroup) Night() error {
 	msg := NewLimitlessMessage()
-	msg.generateKey(0xC6, g)
+	if g.Id == 0 {
+		msg.Key = 0xC1
+	} else {
+		msg.generateKey(0xC6, g)
+	}
 	err := g.Off()
 	if err != nil {
 		return err
@@ -181,19 +185,19 @@ func (g *LimitlessGroup) Night() error {
 
 func (g *LimitlessGroup) Disco() error {
 	msg := NewLimitlessMessage()
-	msg.generateKey(0x4D, g)
+	msg.Key = 0x4D
 	return g.Controller.sendMsg(msg)
 }
 
 func (g *LimitlessGroup) DiscoFaster() error {
 	msg := NewLimitlessMessage()
-	msg.generateKey(0x44, g)
+	msg.Key = 0x44
 	return g.Controller.sendMsg(msg)
 }
 
 func (g *LimitlessGroup) DiscoSlower() error {
 	msg := NewLimitlessMessage()
-	msg.generateKey(0x43, g)
+	msg.Key = 0x43
 	return g.Controller.sendMsg(msg)
 }
 
